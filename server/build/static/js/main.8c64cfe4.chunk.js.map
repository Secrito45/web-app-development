{"version":3,"sources":["services/login.js","components/NewRecipeEditor.js","components/RecipeView.js","App.js","index.js"],"names":["exports","login","credentials","a","axios","post","response","data","NewRecipeEditor","initial","headerLabel","handleAction","handleClose","useState","method","recipeMethod","setRecipeMethod","ingredients","setIngredients","name","recipeName","setRecipeName","url","externalURL","setExternalURL","dropEmptyFrom","targeList","cleanedList","forEach","item","push","handleFieldChange","event","map","i","Number","target","id","value","handleChange","editIngredientFields","option","concat","slice","length","onSubmit","preventDefault","newRecipeObject","undefined","alert","onChange","type","onClick","RecipeView","handleDelete","activeItem","setActiveItem","editRecipe","setEditRecipe","updatedItem","console","log","ingredient","href","RecipeItem","handleClick","App","props","recipes","setRecipes","createNew","setCreateNew","showRecipe","setShowRecipe","itemToShow","setItemToShow","username","setUsername","password","setPassword","user","setUser","useEffect","config","headers","Authorization","token","get","then","res","catch","error","message","userString","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","selectRecipe","newRecipe","put","recipe","delete","result","filter","r","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c64cfe4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURI = 'api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseURI, credentials);\n  return response.data;\n}\n\nconst exports = { login };\n\nexport default exports;","import React, { useState } from 'react';\n\nconst NewRecipeEditor = ({initial, headerLabel, handleAction, handleClose}) => {\n\n  const [recipeMethod, setRecipeMethod] = useState(initial ? initial.method : '');\n  const [ingredients, setIngredients] = useState(initial && initial.ingredients ? initial.ingredients : [ '', '', '' ]);\n  const [recipeName, setRecipeName] = useState(initial ? initial.name : '');\n  const [externalURL, setExternalURL] = useState(initial ? initial.url: '');\n  //const [useExternal, setUseExternal] = useState(false);\n\n  const dropEmptyFrom = (targeList) => {\n    let cleanedList = [];\n    \n    targeList.forEach(item => {\n      if (item !== '') {\n        cleanedList.push(item);\n      }  \n    });\n\n    return cleanedList;\n  };\n\n  const addNewRecipe = event => {\n    event.preventDefault();\n\n    if (recipeName === '') {\n      alert('Reseptillä täytyy olla nimi!');\n      return\n    }\n\n    const newRecipeObject = {\n      id: initial ? initial.id : undefined,\n      url: externalURL,\n      name: recipeName,\n      method: recipeMethod,\n      ingredients: dropEmptyFrom(ingredients)\n    }\n\n    handleAction(newRecipeObject);\n\n    setRecipeMethod('');\n    setIngredients([ '', '', '' ]);\n    setRecipeName('');\n    handleClose(newRecipeObject);\n  };\n\n  const handleFieldChange = event => {\n    setIngredients(ingredients.map((item, i) => \n      i !== Number(event.target.id)\n      ? item \n      : event.target.value \n    ));\n  };\n\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'method':\n        setRecipeMethod(event.target.value);\n        break;\n\n      case 'name':\n        setRecipeName(event.target.value)\n        break;\n    \n      case 'url':\n        setExternalURL(event.target.value)\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  const editIngredientFields = (option) => {\n    if (option === 'add') {\n      setIngredients(ingredients.concat( '' ));\n    } else if (option === 'drop') {\n      setIngredients(ingredients.slice(0, ingredients.length - 1));\n    }\n  };\n\n  return (\n    <form onSubmit={addNewRecipe}>\n      <h3>{headerLabel}</h3>\n\n      <p>Reseptin nimi</p>\n      <input value={recipeName}\n      name='name'\n      onChange={handleChange} \n      /> <br />\n\n    <p>Raaka-aineet</p>\n      <button type='button' onClick={() => editIngredientFields('add')} >\n        Lisää uusi kenttä\n      </button>\n      <button type='button' onClick={() => editIngredientFields('drop')} >\n        Poista kenttä\n      </button> <br /><br />\n\n      {ingredients.map( (item, i) =>\n        <div key={i}>\n          {i + 1}\n          <input\n            value={item}\n            id={i}\n            onChange={handleFieldChange}\n          /> <br />\n        </div>\n      )}\n      \n      <p>Valmistusohje</p>\n      <textarea \n        value={recipeMethod}\n        name='method'\n        onChange={handleChange} \n      /> <br />\n\n      <p>Lisää linkki ohjeenseen</p>\n      <input value={externalURL}\n      name='url'\n      onChange={handleChange} \n      /> <br /> <br />\n      \n      <button type='submit'>Tallenna</button>\n    </form>\n  );\n};\n\nexport default NewRecipeEditor;","import React, {useState} from 'react';\n\nimport NewRecipeEditor from './NewRecipeEditor';\n\n/* Component to render information from the selected recipe */\nconst RecipeView = ({ item, handleAction, handleDelete}) => {\n\n  //const ingredientList = item.ingredients;\n  //const urlToRecipe = item.url;\n  //const method = item.method;\n\n  const [activeItem, setActiveItem] = useState(item);\n  const [editRecipe, setEditRecipe] = useState(false);\n\n  const closeAndUpdate = updatedItem => {\n    setActiveItem(updatedItem);\n    setEditRecipe(false);\n  };\n\n  if (editRecipe) return (\n    <div>\n      <NewRecipeEditor \n      initial={activeItem}\n      headerLabel='Reseptin muokkaus'\n      handleAction={handleAction}\n      handleClose={closeAndUpdate} />\n    </div>\n  );\n\n  console.log(activeItem.ingredients);\n  \n  // NOTE: works because if activeItem.ingredients eq false the AND operation\n  //       is not checked\n  if ( activeItem.ingredients && activeItem.ingredients.length > 0 ) return (\n    <div>\n      <h1>{activeItem.name}</h1>\n      <h2>Raaka-aineet</h2>\n      <ul>\n        {\n          activeItem.ingredients.map((ingredient, i) => \n          <li key={i}>\n            {ingredient}\n          </li>\n        )}\n      </ul>\n      <h2>Valmistusohje</h2>\n      <p>\n        {activeItem.method}\n      </p>\n\n      <button onClick={ () => setEditRecipe(true) }>\n        Muokkaa\n      </button>\n      <button onClick={() => handleDelete(activeItem.id)}>\n        Poista resepti\n      </button>\n\n    </div>\n  );\n\n  if (activeItem.url) return (\n    <div>\n      <h1>{activeItem.name}</h1>\n      <h2>Linkki kolmannenosapuolen ohjeeseen</h2>\n      <a href={activeItem.url}> \n        <p>Linkki ulkoiseen ohjeeseen</p>\n      </a>\n\n      <button onClick={ () => setEditRecipe(true) }>\n        Muokkaa\n      </button>\n      <button onClick={() => handleDelete(activeItem.id)}>\n        Poista resepti\n      </button>\n    \n    </div>\n  );\n\n  return (\n    <div>\n\n      <h1>{activeItem.name}</h1>\n      <h2>Raaka-aineet</h2>\n      <p>Ei saatavilla</p>\n      <h2>Valmistusohje</h2>\n      <p>Ei saatavilla</p>\n      <h2>Linkki kolmannenosapuolen ohjeeseen</h2>\n      <p> Ei saatavilla </p>\n\n      <button onClick={ () => setEditRecipe(true) }>\n        Muokkaa\n      </button>\n      <button onClick={() => handleDelete(activeItem.id)}>\n        Poista resepti\n      </button>\n\n    </div>\n  );\n};\n\nexport default RecipeView;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport loginService from './services/login';\nimport RecipeView from './components/RecipeView';\nimport NewRecipeEditor from './components/NewRecipeEditor';\n\nconst RecipeItem = ({ item, handleClick }) => {\n  const action = () => { \n    //console.log(item);\n    handleClick(item);\n  };\n\n  return (\n    <li>\n      <button onClick={action}>{ item.name }</button>\n    </li>\n  );\n};\n\nconst App = (props) => {\n  const [recipes, setRecipes]       = useState([]);\n  const [createNew, setCreateNew]   = useState(false);\n  const [showRecipe, setShowRecipe] = useState(false);\n  const [itemToShow, setItemToShow] = useState();\n  const [username, setUsername]     = useState('');\n  const [password, setPassword]     = useState('');\n  const [user, setUser]             = useState(null);\n\n  /* Componet effects */\n\n  // Load recipes from server\n  useEffect(() => {\n    console.log('App Component Effect');\n    if (user === null) {\n      console.log('No user logged in');\n      return\n    }\n\n    const config = {\n      headers: { Authorization: `bearer ${user.token}` },\n    };\n\n    axios.get('/api/recipes', config)\n    .then(res => {\n      console.log('Promise fulfilled');\n      setRecipes(res.data);\n    })\n    .catch(error => {\n      console.error('Failed to retrieve recipes:', error.message);\n    });\n  }, [user]);\n\n  useEffect(() => {\n    const userString = window.localStorage.getItem('loggedUser');\n    if (userString) {\n      const user = JSON.parse(userString);\n      //console.log('User in storage', user);\n      setUser(user);\n    }\n  }, []);\n\n  console.log('Render ' + recipes.length + ' recipes');\n\n  /* Logging in related handlers */\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n    const user = await loginService.login({\n      username, password\n    })\n\n    window.localStorage.setItem('loggedUser', JSON.stringify(user));\n    setUser(user);\n    setUsername('');\n    } catch (exception) {\n      console.log('Trying to login with', username, password);\n      alert('Wrong credentials');\n    }\n    setPassword('');\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser');\n    setUser(null);\n    setRecipes([]);\n  };\n\n  /* Recipe editing related actions */\n  const addNewRecipe = newRecipeObject => {\n    const config = {\n      headers: { Authorization: `bearer ${user.token}` },\n    };\n\n    console.log(newRecipeObject);\n    axios.post('/api/recipes', newRecipeObject, config)\n    .then(res => {\n      const newRecipe = res.data;\n      console.log(newRecipe);\n      setRecipes(recipes.concat(newRecipe));\n    });\n  }\n\n  const updateRecipe = newRecipeObject => {\n    const config = {\n      headers: { Authorization: `bearer ${user.token}` },\n    };\n\n    const id = newRecipeObject.id;\n    axios.put('/api/recipes/' + id, newRecipeObject, config)\n    .then(res => {\n      console.log(res.data);\n      setRecipes(recipes.map(recipe =>\n        recipe.id !== id \n        ? recipe \n        : newRecipeObject));\n    });\n  };\n\n  const deleteRecipe = id => {\n    axios.delete('/api/recipes/' + id)\n    .then(result => {\n      setRecipes(recipes.filter(r => r.id !== id));\n      setShowRecipe(false);\n    });\n  };\n\n  // App's actions\n  const selectRecipe = (item) => {\n    setItemToShow(item);\n    setShowRecipe(true);\n  };\n\n  /* APP rendering */\n\n  if (user === null) return (\n    <div>\n      <h2>Kirjaudu sisään palveluun</h2>\n\n      <form onSubmit={handleLogin} >\n        <div>\n          Käyttäjä\n          <input \n          type='text'\n          value={username}\n          name='username'\n          onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          Salasana\n          <input \n          type='password'\n          value={password}\n          name='password'\n          onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type='submit'>Kirjaudu sisään</button>\n      </form>\n    </div>\n  );\n\n  // Display Recipe editor\n  if (createNew) return (\n    <div> \n      <button onClick={ () => setCreateNew(false) }>\n        Takaisin\n      </button>\n      \n      <NewRecipeEditor\n        headerLabel='Lisää uusi resepti'\n        handleAction={addNewRecipe}\n        handleClose={() => setCreateNew(false)}\n      />\n    </div>\n  );\n\n  // Display selected recipe\n  if (showRecipe) return (\n    <div>\n      <button onClick={() => setShowRecipe(false)} >\n        Takaisin\n      </button>\n      <RecipeView item={itemToShow}\n        handleAction={updateRecipe}\n        handleClose={() => setShowRecipe(false)}\n        handleDelete={deleteRecipe}\n      />\n    </div>\n  );\n  \n  // List all available recipes\n  return (\n    <div>\n      <h1>Reseptikirja</h1>\n\n      <ul>\n        {recipes.map(item => \n          <RecipeItem key={item.id} item={item} \n          handleClick={selectRecipe} />\n        )}\n      </ul>\n      <button onClick={ () => setCreateNew(true) }>\n        Luo uusi resepti\n      </button>\n      <br />\n      <br />\n      <button onClick={handleLogout} >Kirjaudu ulos</button>\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}